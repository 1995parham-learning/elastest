stages:
  - lint
  - test
  - deploy-dev

lint:
  image: registry.snapp.tech/golangify/docker-golang-ci:1.12
  stage: lint
  variables:
    HTTP_PROXY: 'http://172.16.77.198:8118'
    HTTPS_PROXY: 'http://172.16.77.198:8118'
    NO_PROXY: '172.16.77.197, gitlab.snapp.ir'
    GOPROXY: http://172.16.77.197:3000
    GOOS: 'linux'
    GOARCH: 'amd64'
  script:
    - go mod download
    - make fast-lint
  only:
    - branches

test:
  image: registry.snapp.tech/golangify/docker-golang-ci:1.12
  stage: test
  variables:
    HTTP_PROXY: 'http://172.16.77.198:8118'
    HTTPS_PROXY: 'http://172.16.77.198:8118'
    NO_PROXY: '172.16.77.197, gitlab.snapp.ir'
    GOPROXY: http://172.16.77.197:3000
    GOOS: 'linux'
    GOARCH: 'amd64'
    BUILD_PATH: '.'
    QUERY_TILE38_ADDR: tile38:9851
    PIPELINE_TILE38_ADDR: tile38:9851
  script:
    - make ci-test
  coverage: '/^total:\t+\(statements\)\t+(\d+\.\d+)%/'
  only:
    - branches

deploy_to_dev1:
  stage: deploy-dev
  variables:
    DOCKER_HOST: tcp://swarm.snapp.tech:2376
    DOCKER_CERT_PATH: DOCKERTLS
    DOCKER_TLS_VERIFY: 1
    DEV_ENV: dev1
  image: docker:stable
  before_script:
    - mkdir DOCKERTLS
    - echo "$TLSCACERT" > DOCKERTLS/ca.pem
    - echo "$TLSCERT" > DOCKERTLS/cert.pem
    - echo "$TLSKEY" > DOCKERTLS/key.pem

  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker stack deploy --with-registry-auth --compose-file=.docker/docker-compose.yml ${DEV_ENV}-${CI_PROJECT_NAME}
    - sleep 30
    - docker stack services ${DEV_ENV}-${CI_PROJECT_NAME}
  environment:
    name: ${DEV_ENV}-url
    url: https://base-api.${DEV_ENV}.snapp.tech
  only:
    - branches
  except:
    - master
  when: manual
