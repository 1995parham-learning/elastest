stages:
  - lint
  - test
  - build-dev
  - deploy-dev

variables:
  # docker registery
  REGISTRY_MIRROR: "https://mirror.snappcloud.io"

  # go proxy
  HTTP_PROXY: http://172.16.77.198:8118
  HTTPS_PROXY: http://172.16.77.198:8118
  NO_PROXY: '172.16.77.197, gitlab.snapp.ir'
  GOPROXY: http://172.16.77.197:3000

  # go build configuration
  GOOS: 'linux'
  GOARCH: 'amd64'

lint:
  image: registry.snapp.tech/golangify/docker-golang-ci:1.12
  stage: lint
  script:
    - make fast-lint
  only:
    - branches

test:
  image: registry.snapp.tech/golangify/docker-golang-ci:1.12
  stage: test
  script:
    - make ci-test
  coverage: '/^total:\t+\(statements\)\t+(\d+\.\d+)%/'
  only:
    - branches

build_app_image:
  stage: build-dev
  image: docker:git
  services:
    - name: docker:dind
      command: ["--registry-mirror=$REGISTRY_MIRROR"]
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  script:
    - >
      docker build \
        --file .docker/Dockerfile \
        --build-arg HTTP_PROXY \
        --build-arg HTTPS_PROXY \
        --build-arg GOPROXY \
        --tag ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_PIPELINE_ID} \
        ./
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_PIPELINE_ID}
  only:
    - branches

deploy_to_dev1:
  stage: deploy-dev
  variables:
    DOCKER_HOST: tcp://swarm.snapp.tech:2376
    DOCKER_CERT_PATH: DOCKERTLS
    DOCKER_TLS_VERIFY: 1
    DEV_ENV: dev1
  image: docker:stable
  before_script:
    - mkdir DOCKERTLS
    - echo "$TLSCACERT" > DOCKERTLS/ca.pem
    - echo "$TLSCERT" > DOCKERTLS/cert.pem
    - echo "$TLSKEY" > DOCKERTLS/key.pem

  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker stack deploy --with-registry-auth --compose-file=.docker/docker-compose.yml ${DEV_ENV}-${CI_PROJECT_NAME}
    - sleep 30
    - docker stack services ${DEV_ENV}-${CI_PROJECT_NAME}
  environment:
    name: ${DEV_ENV}-url
    url: https://base-api.${DEV_ENV}.snapp.tech
  only:
    - branches
  when: manual
